import cv2

# 원본 이미지 경로와 라벨링 데이터
image_path = "~/dev/RetinaFaceConversion/dataset/widerface/val/images/0--Parade/0_Parade_marchingband_1_379.jpg"  # 원본 이미지 파일 경로
labels = """
956 314 13 16 0.87650275 
900 313 13 17 0.85654414 
425 304 33 39 0.83392596 
660 325 14 19 0.7818839 
850 316 13 18 0.77385616 
787 322 12 16 0.7413631 
537 313 21 28 0.7173378 
767 322 11 14 0.6988979 
600 321 13 16 0.64135367 
989 327 10 14 0.61205286 
189 323 21 27 0.55571765 
813 318 16 17 0.5376804 
696 285 23 28 0.48765492 
508 309 9 13 0.27238798 
878 323 10 14 0.24076082 
220 336 15 19 0.19914399 
285 318 28 31 0.18984416 
932 323 10 14 0.1842328 
878 317 10 13 0.17861892 
294 307 29 33 0.17356426 
61 3 14 16 0.16249703 
791 392 12 15 0.15557407 
265 328 17 21 0.15413448 
91 331 17 19 0.15255232 
280 305 28 32 0.144663 
906 315 12 16 0.13778341 
283 303 17 21 0.13675365 
952 368 9 11 0.12961096 
875 294 12 15 0.122905724 
886 364 9 11 0.12196284 
99 332 16 19 0.1165678 
327 0 15 16 0.11134605 
765 365 11 14 0.11084571 
307 319 17 23 0.10946602 
815 328 14 17 0.108180165 
88 322 17 19 0.103269815 
382 319 23 27 0.10303866 
873 327 9 12 0.098959126 
381 302 24 26 0.09841307 
577 302 10 12 0.091094755 
742 356 14 17 0.08452241 
903 304 10 13 0.0821438 
228 331 14 19 0.080673136 
476 321 13 19 0.0805676 
639 391 13 17 0.07873297 
741 311 9 11 0.0785264 
828 315 12 16 0.07781241 
556 328 14 18 0.077325836 
393 325 15 18 0.07332815 
508 312 13 18 0.0714831 
911 343 9 11 0.0713597 
457 310 26 32 0.07080874 
954 359 8 10 0.070773914 
929 321 9 11 0.070578486 
505 304 10 14 0.06841014 
373 320 13 19 0.068267934 
547 321 21 26 0.06737848 
740 345 22 29 0.06345883 
829 363 11 13 0.06025486 
946 318 10 13 0.057277538 
1014 325 8 11 0.055385713 
819 310 14 17 0.055208776 
946 342 8 10 0.055064097 
823 364 12 14 0.054644853 
517 339 13 16 0.05293254 
380 314 17 20 0.05258963 
916 317 9 13 0.05242986 
819 312 20 25 0.051979475 
106 337 13 15 0.051067587 
298 321 20 23 0.050483514 
273 320 24 29 0.0500858 
996 326 9 12 0.049869 
236 329 14 21 0.049244974 
310 11 12 13 0.04752678 
318 3 13 15 0.047525734 
99 322 19 22 0.04735206 
699 295 25 29 0.04692418 
536 325 16 21 0.04615051 
861 325 10 13 0.045850985 
741 315 12 14 0.04487061 
230 407 12 14 0.044830583 
798 376 10 11 0.044577233 
333 9 14 16 0.043669105 
856 348 8 11 0.043586798 
788 310 11 14 0.043571718 
752 317 11 15 0.043384492 
758 316 13 17 0.043175474 
663 397 13 15 0.04279949 
984 378 10 12 0.042540025 
919 343 11 13 0.04192796 
664 403 16 19 0.041760262 
841 365 10 13 0.04158329 
955 372 10 14 0.04124108 
198 327 25 30 0.040499248 
554 314 16 20 0.040151883 
439 311 34 38 0.03946323 
749 122 14 20 0.039355323 
392 303 16 20 0.039202057 
810 321 12 16 0.03918219 
716 305 15 18 0.03915624 
85 334 17 20 0.038972538 
999 356 9 12 0.038540334 
824 294 9 12 0.038177572 
999 350 10 12 0.037545968 
848 295 10 13 0.036939878 
219 354 16 19 0.03631734 
776 339 9 12 0.035845462 
468 318 16 22 0.03567812 
308 357 25 33 0.03507272 
339 5 11 14 0.034818154 
418 313 28 35 0.03475676 
844 370 10 14 0.034746215 
839 316 10 14 0.034629293 
636 401 13 18 0.034462225 
853 273 14 18 0.03409116 
242 330 15 20 0.034060404 
1005 342 9 12 0.033990365 
770 317 12 16 0.033568524 
747 349 14 18 0.03352196 
228 354 13 17 0.032914504 
999 344 10 11 0.03257972 
509 346 12 15 0.032490037 
952 319 13 16 0.032325856 
994 357 8 10 0.031972427 
870 203 12 15 0.03192487 
902 215 13 17 0.031011077 
881 383 9 10 0.030918542 
227 345 14 19 0.030758146 
753 263 24 32 0.03036672 
943 350 8 10 0.030339934 
820 301 11 14 0.030246083 
791 355 10 13 0.029407572 
321 0 27 29 0.029403282 
447 317 21 24 0.029328652 
958 380 8 10 0.02928357 
67 1 13 12 0.029263454 
317 115 13 15 0.02914414 
793 381 11 13 0.029108733 
756 286 17 21 0.02888858 
103 358 24 30 0.028573986 
510 333 12 16 0.028481944 
943 373 10 12 0.028130934 
304 324 25 32 0.028084273 
250 326 21 27 0.027880866 
213 332 16 20 0.02768872 
503 338 14 18 0.027610669 
861 357 9 12 0.027280645 
860 343 10 12 0.02695245 
896 376 10 11 0.026807824 
143 354 11 17 0.026524486 
944 367 9 11 0.026509179 
853 301 10 12 0.026453504 
1015 342 8 12 0.026256615 
525 331 12 16 0.026026346 
522 322 24 30 0.025963653 
956 366 10 13 0.025740726 
830 332 12 14 0.025676385 
950 334 9 13 0.025673933 
984 320 9 11 0.02563176 
874 319 18 23 0.025493791 
829 288 11 13 0.025433665 
819 336 14 16 0.025016006 
957 304 10 13 0.024961438 
895 283 11 13 0.024843318 
977 356 9 11 0.024812786 
772 372 11 16 0.024808329 
309 5 28 32 0.024766989 
410 323 16 20 0.02476336 
859 267 13 17 0.02475371 
1007 326 9 10 0.0246907 
563 338 13 16 0.024683611 
965 359 8 11 0.02468182 
782 329 13 16 0.024424998 
372 320 23 30 0.024416717 
622 318 12 15 0.024356188 
714 288 16 22 0.02424896 
353 387 14 17 0.02420389 
930 261 93 114 0.024058629 
334 56 12 16 0.024041558 
654 320 13 16 0.023833148 
211 413 13 14 0.02373556 
926 318 20 24 0.023731727 
927 331 10 13 0.023494482 
749 350 21 27 0.023492655 
1008 320 8 10 0.023459405 
572 312 15 20 0.023138829 
888 350 9 12 0.023022395 
927 391 8 10 0.022899365 
885 314 11 16 0.022882607 
294 20 10 11 0.022878928 
880 375 9 11 0.022698868 
99 339 25 30 0.022639707 
836 311 11 14 0.022565527 
894 236 14 15 0.022370437 
976 341 9 12 0.022287173 
400 322 23 28 0.022270909 
924 348 9 11 0.022165867 
680 314 12 16 0.022112649 
679 289 211 226 0.02208563 
758 341 10 12 0.0217983 
896 320 12 15 0.021781862 
976 350 10 11 0.021686502 
515 310 11 15 0.02164382 
839 348 10 13 0.021477243 
854 263 12 15 0.0214432 
581 296 10 13 0.021424722 
1005 333 10 12 0.021400701 
743 342 12 16 0.021397056 
608 349 11 13 0.021361312 
124 415 10 12 0.021275494 
294 15 9 11 0.021215118 
668 319 21 26 0.021128057 
989 374 11 14 0.021118548 
803 259 24 32 0.021087382 
229 334 23 31 0.021055974 
976 269 27 33 0.02105343 
885 334 11 14 0.020973373 
861 348 10 12 0.020948907 
507 321 14 17 0.020895215 
881 360 9 11 0.0206328 
427 297 21 26 0.020582424 
563 322 13 19 0.020541696 
613 320 12 17 0.02041855 
982 358 7 10 0.020225452 
675 338 13 18 0.02019066 
772 308 11 14 0.020106737 
781 203 21 26 0.020084262 
316 362 16 21 0.02003573 
"""

# 이미지 로드
image = cv2.imread(image_path)
if image is None:
    raise ValueError(f"Failed to load image at path: {image_path}")

# 라벨링 데이터를 파싱하여 bounding box 그리기
for line in labels.strip().split("\n"):
    x, y, width, height, confidence = map(float, line.split())
    
    # 신뢰도 기준을 설정 (필요에 따라 조정 가능)
    conf_threshold = 0.5
    if confidence < conf_threshold:
        continue

    # 사각형 그리기 (BGR 색상, 두께 설정)
    x1, y1 = int(x), int(y)
    x2, y2 = int(x + width), int(y + height)
    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)

    # 신뢰도 텍스트 추가 (선택 사항)
    cv2.putText(image, f"{confidence:.2f}", (x1, y1 - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 1)

# 결과 이미지 저장 또는 표시
output_path = "output_with_bboxes.jpg"
cv2.imwrite(output_path, image)
cv2.imshow("Detected Objects", image)
cv2.waitKey(0)
cv2.destroyAllWindows()
